buildscript {
    repositories {
        maven { url 'http://download.crashlytics.com/maven' }
    }

    dependencies {
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }
}
apply plugin: 'android'
apply plugin: 'crashlytics'
repositories {
    maven { url 'http://download.crashlytics.com/maven' }
}

android {
    compileSdkVersion 18
    buildToolsVersion "18.1"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 18
    }

    signingConfigs {
        release {
            storeFile file("oak.keystore")
            keyAlias "oak devs"
        }
    }

    final PROVIDER_DEBUG = "com.oak.debug.courses.contentprovider"
    final PROVIDER_RELEASE = "com.oak.courses.contentprovider"

    buildTypes {

        debug {
            packageNameSuffix ".debug"
            buildConfig "public static final String PROVIDER_AUTHORITY = \"" + PROVIDER_DEBUG + "\";"
        }

        release {
            buildConfig "public static final String PROVIDER_AUTHORITY = \"" + PROVIDER_RELEASE + "\";"
            signingConfig signingConfigs.release
        }
    }

    if (project.hasProperty('storePassword') && project.hasProperty('keyPassword')) {
        android.signingConfigs.release.storePassword = storePassword
        android.signingConfigs.release.keyPassword = keyPassword
    } else {
        buildTypes.release.signingConfig = null
    }
}

dependencies {
    compile 'com.android.support:support-v4:18.0.0'
    compile 'com.android.support:appcompat-v7:18.0.+'
    compile 'de.greenrobot:eventbus:2.0.2'
    compile 'com.github.chrisbanes.actionbarpulltorefresh:library:0.7'
    compile 'com.github.chrisbanes.actionbarpulltorefresh:extra-abc:0.7'
    compile 'com.squareup.okhttp:okhttp:1.2.0'
    compile 'com.crashlytics.android:crashlytics:1.+'
    compile 'com.google.android.gms:play-services:3.+'
    compile project(':Volley')
    compile fileTree(dir: 'libs', include: '*.jar')
}
